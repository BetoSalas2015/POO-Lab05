#BlueJ class context
comment0.target=Libro
comment0.text=\n\ La\ clase\ Libro\ representa\ un\ libro\ en\ un\ sistema\ de\ gesti\u00F3n\ bibliotecaria.\n\ Permite\ manejar\ y\ organizar\ la\ informaci\u00F3n\ b\u00E1sica\ de\ los\ libros,\ incluyendo\n\ su\ t\u00EDtulo,\ autor,\ ISBN,\ n\u00FAmero\ de\ p\u00E1ginas\ y\ estado\ de\ pr\u00E9stamo.\n\ \n\ Esta\ clase\ proporciona\ funcionalidades\ para\:\n\ -\ Gestionar\ la\ informaci\u00F3n\ b\u00E1sica\ del\ libro\n\ -\ Controlar\ el\ estado\ de\ pr\u00E9stamo\n\ -\ Obtener\ informaci\u00F3n\ detallada\ del\ libro\n\ \n\ @author\ Roberto\ SALAZAR\ MARQUEZ\n\ @version\ 1.0\n
comment1.params=
comment1.target=Libro()
comment1.text=\n\ Constructor\ por\ defecto\ que\ inicializa\ un\ libro\ con\ valores\ predeterminados.\n\ El\ t\u00EDtulo\ se\ establece\ como\ "Sin\ t\u00EDtulo",\ el\ autor\ como\ "Desconocido",\n\ el\ ISBN\ como\ "0000000000000",\ n\u00FAmero\ de\ p\u00E1ginas\ en\ 0\ y\ el\ estado\ como\ no\ prestado.\n
comment10.params=isbn
comment10.target=void\ setIsbn(java.lang.String)
comment10.text=\n\ Establece\ el\ ISBN\ del\ libro.\n\ Valida\ que\ el\ ISBN\ tenga\ el\ formato\ correcto\ (13\ d\u00EDgitos).\n\ @param\ isbn\ El\ nuevo\ ISBN\ del\ libro\n
comment11.params=
comment11.target=int\ getNumPaginas()
comment11.text=\n\ Obtiene\ el\ n\u00FAmero\ de\ p\u00E1ginas\ del\ libro.\n\ @return\ El\ n\u00FAmero\ de\ p\u00E1ginas\ del\ libro\n
comment12.params=numPaginas
comment12.target=void\ setNumPaginas(int)
comment12.text=\n\ Establece\ el\ n\u00FAmero\ de\ p\u00E1ginas\ del\ libro.\n\ Valida\ que\ el\ n\u00FAmero\ de\ p\u00E1ginas\ sea\ mayor\ que\ cero.\n\ @param\ numPaginas\ El\ nuevo\ n\u00FAmero\ de\ p\u00E1ginas\ del\ libro\n
comment13.params=
comment13.target=boolean\ isPrestado()
comment13.text=\n\ Obtiene\ el\ estado\ de\ pr\u00E9stamo\ del\ libro.\n\ @return\ true\ si\ el\ libro\ est\u00E1\ prestado,\ false\ si\ est\u00E1\ disponible\n
comment14.params=prestado
comment14.target=void\ setPrestado(boolean)
comment14.text=\n\ Establece\ el\ estado\ de\ pr\u00E9stamo\ del\ libro.\n\ @param\ prestado\ El\ nuevo\ estado\ de\ pr\u00E9stamo\ del\ libro\n
comment15.params=
comment15.target=boolean\ prestarLibro()
comment15.text=\n\ Intenta\ prestar\ el\ libro\ si\ est\u00E1\ disponible.\n\ Este\ m\u00E9todo\ verifica\ si\ el\ libro\ puede\ ser\ prestado\ y\ actualiza\ su\ estado.\n\ \n\ @return\ true\ si\ el\ pr\u00E9stamo\ fue\ exitoso\ (el\ libro\ estaba\ disponible),\n\ \ \ \ \ \ \ \ \ false\ si\ el\ libro\ ya\ estaba\ prestado\n
comment16.params=
comment16.target=void\ devolverLibro()
comment16.text=\n\ Devuelve\ el\ libro\ a\ la\ biblioteca.\n\ Este\ m\u00E9todo\ marca\ el\ libro\ como\ no\ prestado,\ haci\u00E9ndolo\ disponible\n\ para\ futuros\ pr\u00E9stamos.\n\ \n\ No\ requiere\ validaciones\ ya\ que\ un\ libro\ siempre\ puede\ ser\ devuelto\n\ independientemente\ de\ su\ estado\ actual.\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\n\ Intenta\ prestar\ el\ libro\ si\ est\u00E1\ disponible.\n\ Este\ m\u00E9todo\ verifica\ si\ el\ libro\ puede\ ser\ prestado\ y\ actualiza\ su\ estado.\n\ \n\ @return\ true\ si\ el\ pr\u00E9stamo\ fue\ exitoso\ (el\ libro\ estaba\ disponible),\n\ \ \ \ \ \ \ \ \ false\ si\ el\ libro\ ya\ estaba\ prestado\n
comment18.params=
comment18.target=boolean\ verificarDisponibilidad()
comment18.text=\n\ Verifica\ si\ el\ libro\ est\u00E1\ disponible\ para\ pr\u00E9stamo.\n\ Un\ libro\ est\u00E1\ disponible\ cuando\ no\ est\u00E1\ prestado\ actualmente.\n\ \n\ @return\ true\ si\ el\ libro\ est\u00E1\ disponible\ para\ pr\u00E9stamo,\n\ \ \ \ \ \ \ \ \ false\ si\ el\ libro\ ya\ est\u00E1\ prestado\n
comment2.params=titulo\ autor
comment2.target=Libro(java.lang.String,\ java.lang.String)
comment2.text=\n\ Constructor\ que\ inicializa\ un\ libro\ con\ t\u00EDtulo\ y\ autor.\n\ Los\ dem\u00E1s\ atributos\ se\ inicializan\ con\ valores\ predeterminados.\n\ \n\ @param\ titulo\ El\ t\u00EDtulo\ del\ libro\n\ @param\ autor\ El\ autor\ del\ libro\n
comment3.params=titulo\ autor\ isbn\ numPaginas
comment3.target=Libro(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment3.text=\n\ Constructor\ que\ inicializa\ un\ libro\ con\ todos\ sus\ atributos.\n\ \n\ @param\ titulo\ El\ t\u00EDtulo\ del\ libro\n\ @param\ autor\ El\ autor\ del\ libro\n\ @param\ isbn\ El\ ISBN\ del\ libro\n\ @param\ numPaginas\ El\ n\u00FAmero\ de\ p\u00E1ginas\ del\ libro\n
comment4.params=otroLibro
comment4.target=Libro(Libro)
comment4.text=\n\ Constructor\ de\ copia\ que\ crea\ un\ nuevo\ libro\ a\ partir\ de\ otro\ existente.\n\ Crea\ una\ copia\ independiente\ del\ libro\ original,\ manteniendo\ todos\ sus\ datos\n\ excepto\ el\ estado\ de\ pr\u00E9stamo\ que\ se\ inicializa\ como\ no\ prestado.\n\ \n\ @param\ otroLibro\ El\ libro\ del\ cual\ se\ copiar\u00E1n\ los\ datos\n
comment5.params=
comment5.target=java.lang.String\ getTitulo()
comment5.text=\n\ Obtiene\ el\ t\u00EDtulo\ del\ libro.\n\ @return\ El\ t\u00EDtulo\ del\ libro\n
comment6.params=titulo
comment6.target=void\ setTitulo(java.lang.String)
comment6.text=\n\ Establece\ el\ t\u00EDtulo\ del\ libro.\n\ Valida\ que\ el\ autor\ no\ sea\ null\ ni\ est\u00E9\ vac\u00EDo.\n\ @param\ titulo\ El\ nuevo\ titulo\ del\ libro\n
comment7.params=
comment7.target=java.lang.String\ getAutor()
comment7.text=\n\ Obtiene\ el\ autor\ del\ libro.\n\ @return\ El\ nombre\ del\ autor\ del\ libro\n
comment8.params=autor
comment8.target=void\ setAutor(java.lang.String)
comment8.text=\n\ Establece\ el\ autor\ del\ libro.\n\ Valida\ que\ el\ autor\ no\ sea\ null\ ni\ est\u00E9\ vac\u00EDo.\n\ @param\ autor\ El\ nuevo\ autor\ del\ libro\n
comment9.params=
comment9.target=java.lang.String\ getIsbn()
comment9.text=\n\ Obtiene\ el\ ISBN\ del\ libro.\n\ @return\ El\ ISBN\ del\ libro\n
numComments=19
